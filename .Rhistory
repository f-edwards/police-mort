plot.dat$division<-factor(plot.dat$division,
levels=sort(as.character(unique(plot.dat$division))))
plot.dat<-plot.dat[order(plot.dat$ur.code, plot.dat$division), ]
names(plot.dat)[3:6]<-c("lwr", "Median", "upr", 'comparison')
# scale
#plot.dat = plot.dat %>%
#		  mutate_at(vars(lwr:upr), funs(./(1588/366)))
# 3: add indicator for whether interval includes 1
plot.dat$CI_includes_1 = ifelse(between(1, plot.dat$lwr,
plot.dat$upr) == TRUE, 'Yes', 'No')
plot.dat2 =
plot.dat %>%
mutate(ur.code = ifelse(ur.code == '1: large central metro', '1: L. Central',
ifelse(ur.code == '2: large fringe metro',  '2: L. Fringe',
ifelse(ur.code == '3: medium metro',  '3: Medium',
ifelse(ur.code == '4: small metro',   '4: Small',
ifelse(ur.code == '5: micropolitan',  '5: Micro', '6: Noncore')))))) %>%
mutate(ci_includes_1 = ifelse(CI_includes_1 == 'no', 1.05, 1))%>%
rename(`Interval\nIncludes 1`=CI_includes_1)%>%
rename(Comparison=comparison)
# 4: plot it out
ggplot(plot.dat2,
aes(x = ur.code, y = Median, group = Comparison, color = Comparison)) +
facet_wrap(~division) +
geom_point(aes(size = `Interval\nIncludes 1`), alpha = .75) +
scale_color_brewer(palette = 'Set2') +
theme_bw() +
ylab("Mortality rate ratio") +
xlab(" ")+
geom_hline(yintercept = 1, lty = 2) +
#theme(axis.text.x = element_text(angle = 75, hjust = 1, size = 9)) +
#geom_line() +
scale_size_discrete(range = c(5,2)) +
coord_flip() +
scale_x_discrete(limits = rev(levels(as.factor(plot.dat2$ur.code))))+
theme(legend.position="bottom")+
ggsave("fig2.tiff", width=6.5, height=6.5, units="in")
###############################################################
## Figure 3: difference between observed, median estimated
# 1: calculate expected deaths from posterior, count observed deaths/pop
# 2: lump divisions, UR using expected counts
###############################################################
#### make observed deaths, pop DF
post.observed.blk<-tmp2%>%
group_by(ur.code, division)%>%
summarise(observed.deaths=sum(d.black),
observed.pop=sum(black))%>%
ungroup()
post.observed.lat<-tmp2%>%
group_by(ur.code, division)%>%
summarise(observed.deaths=sum(d.latino),
observed.pop=sum(latino))%>%
ungroup()
post.observed.wht<-tmp2%>%
group_by(ur.code, division)%>%
summarise(observed.deaths=sum(d.white),
observed.pop=sum(white))%>%
ungroup()
#### pull full posterior sim results, convert into expected deaths to aggregate to ur, div
blk.ur.post.mort<-post.observed.blk%>%
left_join(post.blk.sims)%>%
ungroup()%>%
select(-division)%>%
group_by(ur.code, sim)%>%
summarise(sim.mort.rt=sum((sim.rate/100000) * observed.pop)/sum(observed.pop) * 100000,
obs.mort.rt=sum(observed.deaths)/sum(observed.pop)*100000)%>%
mutate(Race="Black")
lat.ur.post.mort<-post.observed.lat%>%
left_join(post.lat.sims)%>%
ungroup()%>%
select(-division)%>%
group_by(ur.code, sim)%>%
summarise(sim.mort.rt=sum((sim.rate/100000) * observed.pop)/sum(observed.pop) * 100000,
obs.mort.rt=sum(observed.deaths)/sum(observed.pop)*100000)%>%
mutate(Race="Hispanic")
wht.ur.post.mort<-post.observed.wht%>%
left_join(post.wht.sims)%>%
ungroup()%>%
select(-division)%>%
group_by(ur.code, sim)%>%
summarise(sim.mort.rt=sum((sim.rate/100000) * observed.pop)/sum(observed.pop) * 100000,
obs.mort.rt=sum(observed.deaths)/sum(observed.pop)*100000)%>%
mutate(Race="White")
ur.post<-bind_rows(blk.ur.post.mort,
lat.ur.post.mort,
wht.ur.post.mort)
ur.post<-ur.post%>%
ungroup()%>%
mutate_at(vars(sim.mort.rt, obs.mort.rt), funs(./(1588/365))) %>%
mutate(ur.code = ifelse(ur.code == '1: large central metro', '1: Large Central',
ifelse(ur.code == '2: large fringe metro',  '2: Large Fringe',
ifelse(ur.code == '3: medium metro',  '3: Medium',
ifelse(ur.code == '4: small metro',   '4: Small',
ifelse(ur.code == '5: micropolitan',  '5: Micro', '6: Noncore'))))))
blk.div.post.mort<-post.observed.blk%>%
left_join(post.blk.sims)%>%
ungroup()%>%
select(-ur.code)%>%
group_by(division, sim)%>%
summarise(sim.mort.rt=sum((sim.rate/100000) * observed.pop)/sum(observed.pop) * 100000,
obs.mort.rt=sum(observed.deaths)/sum(observed.pop)*100000)%>%
mutate(Race="Black")
lat.div.post.mort<-post.observed.lat%>%
left_join(post.lat.sims)%>%
ungroup()%>%
select(-ur.code)%>%
group_by(division, sim)%>%
summarise(sim.mort.rt=sum((sim.rate/100000) * observed.pop)/sum(observed.pop) * 100000,
obs.mort.rt=sum(observed.deaths)/sum(observed.pop)*100000)%>%
mutate(Race="Hispanic")
wht.div.post.mort<-post.observed.wht%>%
left_join(post.wht.sims)%>%
ungroup()%>%
select(-ur.code)%>%
group_by(division, sim)%>%
summarise(sim.mort.rt=sum((sim.rate/100000) * observed.pop)/sum(observed.pop) * 100000,
obs.mort.rt=sum(observed.deaths)/sum(observed.pop)*100000)%>%
mutate(Race="White")
div.post<-bind_rows(blk.div.post.mort,
lat.div.post.mort,
wht.div.post.mort)
div.post <- div.post %>%
mutate_at(vars(sim.mort.rt, obs.mort.rt), funs(./(1588/365)))
#### plot it
ggplot(ur.post, aes(sim.mort.rt, fill=Race))+
geom_density(alpha=0.6)+
geom_point(aes(x=obs.mort.rt, y=0, shape=Race), size=2)+
facet_wrap(~ur.code)+
xlab("Police-involved deaths per 100,000 per year")+
ylab("")+
coord_cartesian(xlim=c(0,2.5), ylim=c(0,10))+
theme(legend.position="bottom")+
ggsave("UR_Density.tiff",width=6.5, height=6.5, units="in")
ggplot(div.post, aes(sim.mort.rt, fill=Race))+
geom_density(alpha=0.6)+
geom_point(aes(x=obs.mort.rt, y=0, shape=Race), size=2)+
facet_wrap(~division)+
xlab("Police-involved deaths per 100,000 per year")+
ylab("")+
coord_cartesian(xlim=c(0,2.5), ylim=c(0,10))+
theme(legend.position="bottom")+
ggsave("Div_Density.tiff", width=6.5, height=6.5, units="in")
################# Quantile approach
# # post.ur.blk<-post.count.blk%>% ### calculate death count, join by pop count
# #   group_by(ur.code)%>%
# #   summarise_all(sum)
#
# post.ur.blk<-post.observed.blk%>%
#   group_by(ur.code)%>%
#   summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
#             post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
#             post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
#   mutate(race="Black")
#
# post.div.blk<-post.observed.blk%>%
#   group_by(division)%>%
#   summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
#             post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
#             post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
#   mutate(race="Black")
#
# post.observed.wht<-tmp2%>%
#   group_by(ur.code, division)%>%
#   summarise(observed.deaths=sum(d.white),
#             observed.pop=sum(white))%>%
#   left_join(post.wht.int)%>%
#   mutate(post.count.lower=`2.5%`*observed.pop/100000,
#          post.count.median=`50%`*observed.pop/100000,
#          post.count.upper=`97.5%`*observed.pop/100000)
#
# post.ur.wht<-post.observed.wht%>%
#   group_by(ur.code)%>%
#   summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
#             post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
#             post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
#   mutate(race="White")
#
# post.div.wht<-post.observed.wht%>%
#   group_by(ur.code)%>%
#   summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
#             post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
#             post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
#   mutate(race="White")
#
# post.observed.lat<-tmp2%>%
#   group_by(ur.code, division)%>%
#   summarise(observed.deaths=sum(d.latino),
#             observed.pop=sum(latino))%>%
#   left_join(post.lat.int)%>%
#   mutate(post.count.lower=`2.5%`*observed.pop/100000,
#          post.count.median=`50%`*observed.pop/100000,
#          post.count.upper=`97.5%`*observed.pop/100000)
#
# post.ur.lat<-post.observed.lat%>%
#   group_by(ur.code)%>%
#   summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
#             post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
#             post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
#   mutate(race="Latino")
#
# post.ur<-bind_rows(post.ur.blk, post.ur.wht, post.ur.lat)
knitr::opts_chunk$set(echo = TRUE)
sum(tmp2$d.latino)
head(tmp2)
head(div.post)
quantile(div.post%>%filter(Race="Black"), c(0.05, 0.5, 0.95))
quantile(div.post%>%filter(Race=="Black"), c(0.05, 0.5, 0.95))
quantile(div.post%>%dplyr::filter(Race=="Black"), c(0.05, 0.5, 0.95))
quantile(div.post%>%dplyr::filter(Race="Black"), c(0.05, 0.5, 0.95))
quantile(div.post%>%dplyr::filter(Race=="Black"), c(0.05, 0.5, 0.95))
div.post%>%filter(Race="Black")
div.post%>%filter(Race=="Black")
quantile(as.vector(div.post%>%dplyr::filter(Race=="Black")%>%select(sim.mort.rt)), c(0.05, 0.5, 0.95))
blk.quant<-div.post%>%filter(Race=="Black")
blk.quant<-div.post%>%filter(Race=="Black", division=="Pacific")
quantile(blk.quant$sim.mort.rt, 0.05, 0.5, 0.95)
quantile(blk.quant$sim.mort.rt, c(0.05, 0.5, 0.95))
quantile(blk.quant$sim.mort.rt, c(0.025, 0.5, 0.975))
wht.quant<-div.post%>%filter(Race=="White", division=="Pacific")
quantile(wht.quant$sim.mort.rt, c(0.025, 0.5, 0.975))
.8-.31
2.71-.68
2.03/.49
var(blk.quant$sim.mort.rt)
var(wht.quant$sim.mort.rt)
0.27/0.016
mean(wht.quant$sim.mort.rt)/sd(wht.quant$sim.mort.rt)
mean(blk.quant$sim.mort.rt)/sd(blk.quant$sim.mort.rt)
wht.quant<-div.post%>%filter(Race=="White", division=="West South Central")
quantile(wht.quant$sim.mort.rt, c(0.025, 0.5, 0.975))
lat.quant<-div.post%>%filter(Race=="Hispanic", division=="West South Central")
quantile(lat.quant$sim.mort.rt, c(0.025, 0.5, 0.975))
# post.ur.blk<-post.count.blk%>% ### calculate death count, join by pop count
#   group_by(ur.code)%>%
#   summarise_all(sum)
post.ur.blk<-post.observed.blk%>%
group_by(ur.code)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
mutate(race="Black")
post.div.blk<-post.observed.blk%>%
group_by(division)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
mutate(race="Black")
post.observed.wht<-tmp2%>%
group_by(ur.code, division)%>%
summarise(observed.deaths=sum(d.white),
observed.pop=sum(white))%>%
left_join(post.wht.int)%>%
mutate(post.count.lower=`2.5%`*observed.pop/100000,
post.count.median=`50%`*observed.pop/100000,
post.count.upper=`97.5%`*observed.pop/100000)
post.ur.wht<-post.observed.wht%>%
group_by(ur.code)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
mutate(race="White")
post.div.wht<-post.observed.wht%>%
group_by(ur.code)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
mutate(race="White")
post.observed.lat<-tmp2%>%
group_by(ur.code, division)%>%
summarise(observed.deaths=sum(d.latino),
observed.pop=sum(latino))%>%
left_join(post.lat.int)%>%
mutate(post.count.lower=`2.5%`*observed.pop/100000,
post.count.median=`50%`*observed.pop/100000,
post.count.upper=`97.5%`*observed.pop/100000)
post.ur.lat<-post.observed.lat%>%
group_by(ur.code)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
mutate(race="Latino")
post.ur.blk
post.ur.blk<-post.observed.blk%>%
group_by(ur.code)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
mutate(race="Black")
post.observed.blk
post.ur.blk<-post.count.blk%>% ### calculate death count, join by pop count
group_by(ur.code)%>%
summarise_all(sum)
post.ur.blk<-post.observed.blk%>%
group_by(ur.code)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
mutate(race="Black")
post.div.blk<-post.observed.blk%>%
group_by(division)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
mutate(race="Black")
post.observed.wht<-tmp2%>%
group_by(ur.code, division)%>%
summarise(observed.deaths=sum(d.white),
observed.pop=sum(white))%>%
left_join(post.wht.int)%>%
mutate(post.count.lower=`2.5%`*observed.pop/100000,
post.count.median=`50%`*observed.pop/100000,
post.count.upper=`97.5%`*observed.pop/100000)
post.ur.wht<-post.observed.wht%>%
group_by(ur.code)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
mutate(race="White")
post.div.wht<-post.observed.wht%>%
group_by(ur.code)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
mutate(race="White")
post.observed.lat<-tmp2%>%
group_by(ur.code, division)%>%
summarise(observed.deaths=sum(d.latino),
observed.pop=sum(latino))%>%
left_join(post.lat.int)%>%
mutate(post.count.lower=`2.5%`*observed.pop/100000,
post.count.median=`50%`*observed.pop/100000,
post.count.upper=`97.5%`*observed.pop/100000)
post.ur.lat<-post.observed.lat%>%
group_by(ur.code)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
mutate(race="Latino")
#
# post.ur<-bind_rows(post.ur.blk, post.ur.wht, post.ur.lat)
post.ur.blk
post.observed.blk<-tmp2%>%
group_by(ur.code, division)%>%
summarise(observed.deaths=sum(d.blkino),
observed.pop=sum(blkino))%>%
left_join(post.blk.int)%>%
mutate(post.count.lower=`2.5%`*observed.pop/100000,
post.count.median=`50%`*observed.pop/100000,
post.count.upper=`97.5%`*observed.pop/100000)
post.ur.blk<-post.observed.blk%>%
group_by(ur.code)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
mutate(race="Black")
post.div.blk<-post.observed.blk%>%
group_by(division)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
mutate(race="Black")
post.observed.blk<-tmp2%>%
group_by(ur.code, division)%>%
summarise(observed.deaths=sum(d.black),
observed.pop=sum(black))%>%
left_join(post.blk.int)%>%
mutate(post.count.lower=`2.5%`*observed.pop/100000,
post.count.median=`50%`*observed.pop/100000,
post.count.upper=`97.5%`*observed.pop/100000)
post.ur.blk<-post.observed.blk%>%
group_by(ur.code)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
mutate(race="Black")
post.div.blk<-post.observed.blk%>%
group_by(division)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
mutate(race="Black")
post.ur.blk
post.ur.blk
head(tmp2)
ehad(tmp2)
head(tmp2)
post.blk.int
post.tot = posterior_predict(tot.stan, newdata = newdata)/1000
post.tot.int = bind_cols(ur.division, as.data.frame(
t(apply(post.tot, 2, function(x)quantile(x, probs=c(0.025, 0.5, 0.975))))))
post.tot.int = post.tot.int %>% mutate(race = 'Total')
post.observed<-tmp2%>%
group_by(ur.code, division)%>%
summarise(observed.deaths=sum(d.total),
observed.pop=sum(tot.pop))%>%
left_join(post.tot.int)%>%
mutate(post.count.lower=`2.5%`*observed.pop/100000,
post.count.median=`50%`*observed.pop/100000,
post.count.upper=`97.5%`*observed.pop/100000)
post.observed
post.ur.tot<-post.observed%>%
group_by(ur.code)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
mutate(race="Total")
post.ur.tot
post.observed<-tmp2%>%
group_by(ur.code, division)%>%
summarise(observed.deaths=sum(d.total),
observed.pop=sum(tot.pop))%>%
left_join(post.tot.int)%>%
mutate(post.count.lower=`2.5%`*observed.pop/100000,
post.count.median=`50%`*observed.pop/100000,
post.count.upper=`97.5%`*observed.pop/100000)
post.ur.tot<-post.observed%>%
group_by(ur.code)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000 * (1588/365),
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000* (1588/365),
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000* (1588/365))%>%
mutate(race="Total")
post.ur.tot
post.observed<-tmp2%>%
group_by(ur.code, division)%>%
summarise(observed.deaths=sum(d.total),
observed.pop=sum(tot.pop))%>%
left_join(post.tot.int)%>%
mutate(post.count.lower=`2.5%`*observed.pop/100000,
post.count.median=`50%`*observed.pop/100000,
post.count.upper=`97.5%`*observed.pop/100000)
post.ur.tot<-post.observed%>%
group_by(ur.code)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000 / (1588/365),
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000/ (1588/365),
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000/ (1588/365))%>%
mutate(race="Total")
post.ur.tot
################# Quantile approach
post.observed<-tmp2%>%
group_by(ur.code, division)%>%
summarise(observed.deaths=sum(d.total),
observed.pop=sum(tot.pop))%>%
left_join(post.tot.int)%>%
mutate(post.count.lower=`2.5%`*observed.pop/100000,
post.count.median=`50%`*observed.pop/100000,
post.count.upper=`97.5%`*observed.pop/100000)
post.ur.tot<-post.observed%>%
group_by(ur.code)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000 / (1588/365),
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000/ (1588/365),
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000/ (1588/365))%>%
mutate(race="Total")
post.observed.blk<-tmp2%>%
group_by(ur.code, division)%>%
summarise(observed.deaths=sum(d.black),
observed.pop=sum(black))%>%
left_join(post.blk.int)%>%
mutate(post.count.lower=`2.5%`*observed.pop/100000,
post.count.median=`50%`*observed.pop/100000,
post.count.upper=`97.5%`*observed.pop/100000)
post.ur.blk<-post.observed.blk%>%
group_by(ur.code)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000/ (1588/365),
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000/ (1588/365),
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000/ (1588/365))%>%
mutate(race="Black")
post.div.blk<-post.observed.blk%>%
group_by(division)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
mutate(race="Black")
post.observed.wht<-tmp2%>%
group_by(ur.code, division)%>%
summarise(observed.deaths=sum(d.white),
observed.pop=sum(white))%>%
left_join(post.wht.int)%>%
mutate(post.count.lower=`2.5%`*observed.pop/100000,
post.count.median=`50%`*observed.pop/100000,
post.count.upper=`97.5%`*observed.pop/100000)
post.ur.wht<-post.observed.wht%>%
group_by(ur.code)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000/ (1588/365),
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000/ (1588/365),
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000/ (1588/365))%>%
mutate(race="White")
post.div.wht<-post.observed.wht%>%
group_by(ur.code)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000,
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000,
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000)%>%
mutate(race="White")
post.observed.lat<-tmp2%>%
group_by(ur.code, division)%>%
summarise(observed.deaths=sum(d.latino),
observed.pop=sum(latino))%>%
left_join(post.lat.int)%>%
mutate(post.count.lower=`2.5%`*observed.pop/100000,
post.count.median=`50%`*observed.pop/100000,
post.count.upper=`97.5%`*observed.pop/100000)
post.ur.lat<-post.observed.lat%>%
group_by(ur.code)%>%
summarise(observed.rate=sum(observed.deaths)/sum(observed.pop)*100000/ (1588/365),
post.rate.lower=sum(post.count.lower)/sum(observed.pop)*100000/ (1588/365),
post.rate.upper=sum(post.count.upper)/sum(observed.pop)*100000/ (1588/365))%>%
mutate(race="Latino")
#
post.ur.tot
blk.stan
lat.stan
wht.stan
tot.stan
